---
import Arrow from "../icons/Arrow.astro";
const response = await fetch(`http://localhost:1337/api/navigation/render/mobile-menu?type=TREE`);
const data = await response.json();
---
<nav class="mpp-main-mobile-menu">
    <ul>
        {
            data.map((item: { path: string | URL; title: unknown; items: any[]; index: any; }) => 
                <li class="mpp-main-mobile-menu-item-lvl-1">
                    <a href={item.path}>{item.title}</a>
                        {
                            item?.items?.length > 0 && 
                            <input id={`dropdown-list-${item.id}`} class="mpp-main-mobile-toggle" type="checkbox" value="" />
                            <label for={`dropdown-list-${item.id}`}>
                                <Arrow />
                            </label>
                            <ul class="mpp-main-mobile-menu-list-lvl-2">
                            {
                                item.items.map( (_item: { path: string | URL; title: unknown; }) =>
                                    <li class="mpp-main-mobile-menu-item-lvl-2 ">
                                        <a href={_item.path}>{ _item.title }</a>
                                    </li>
                                )
                            }
                        </ul>  
                        }
                </li> 
            )
        }
    </ul>
</nav>

<style is:global lang="scss">

.mpp-header-mobile {
    background: #FFFFFF;
    position: relative;
    padding: .6rem 0;
    font-size: .75em;
    font-weight: 600;
    z-index: 2;
    @media (min-width: 768px) {
        display: none;
    }
    & .logo {
    margin: 0 11vw 0 0;
    }
}

.mpp-contacts {
    display: flex;
    align-items: center;
    gap: 0.75em;
}

.mpp-contacts-icon {
    display: block;

    & svg {
        box-shadow: 0px 0px 3px 0px rgba(0,0,0,0.75);
        border-radius: 15px;
    }
}

.mpp-header-mobile-wrap {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
}

.mpp-main-menu {
    flex-basis: 100%;
    @media (max-width:768px) {
        border-top: 1px solid rgba(0,0,0,.25);
        border-bottom: 1px solid rgba(0,0,0,.25);
    }
}

.mpp-main-menu-wrapper {
    /* position: relative; */
    padding: .5em 0;

    @media (max-width:768px) {
        overflow-x: auto;
    }
}

.mpp-main-menu-list-lvl-1 {
    display: flex;
    gap: 1.2em;
    & > a {
        white-space: nowrap;
    }
}

.mpp-main-mobile-menu {
    padding: 1.2rem 2rem;
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: #fff;
    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25);
    z-index: 1;

    & ul {
        display: flex;
        flex-direction: column;
        gap: 1em;
    }
}


.mpp-main-mobile-menu-item-lvl-1 {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;

    
}

.mpp-main-mobile-menu-list-lvl-2 {
    flex-basis: 100%;
    transition: cubic-bezier(0.165, 0.84, 0.44, 1);
    overflow: hidden;
    max-height: 0;
}

.mpp-main-mobile-menu-item-lvl-2 > a {
    font-weight: 500;
}

.mpp-main-mobile-toggle {
    display: none;
}


.mpp-main-mobile-toggle:checked ~ .mpp-main-mobile-menu-list-lvl-2 {
    margin: 1em 0 0 1.5em;
    max-height: 1000px;


}

.mpp-main-mobile-toggle:checked ~ label {
    transform: rotate(180deg);
}

.mpp-main-mobile-toggle:checked ~ label svg path {
    stroke: #F3704E;
}

</style>
